/* This file was generated by the Hex-Rays decompiler version 9.1.0.250226.
   Copyright (c) 2007-2021 Hex-Rays <info@hex-rays.com>

   Detected compiler: Visual C++
*/

#include <windows.h>
#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

__int64 __fastcall sub_140001000(const WCHAR *a1, const WCHAR *a2);
char *__fastcall sub_140001270(HMODULE hModule, const WCHAR *a2);
__int64 __fastcall sub_140001330(LPWSTR lpCommandLine); // idb
int __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd);
__int64 sub_1400016B4();
void *sub_1400016D4();
void *sub_1400016DC();
void *__fastcall operator new(size_t Size); // idb
void __cdecl j_j_free(void *Block);
__int64 __fastcall UserMathErrorFunction(struct _exception *a1);
void sub_140001FA4();
void *sub_140001FE0();
void *sub_140001FE8();
void sub_140001FF0();
__int64 sub_140002218();
void __fastcall sub_140002264();
__int64 __fastcall j__guard_check_icall_nop(); // weak
_QWORD *__fastcall sub_1400022B8(_QWORD *a1, __int64 a2);
_QWORD *__fastcall sub_1400022F8(_QWORD *a1);
_QWORD *__fastcall sub_140002318(_QWORD *a1, __int64 a2);
_QWORD *__fastcall sub_140002358(_QWORD *a1);
void __noreturn sub_140002408();
void __noreturn sub_140002428();
_QWORD *__fastcall sub_140002630(_QWORD *a1, char a2);
// void *__cdecl memmove(void *, const void *Src, size_t Size);
// void *__cdecl memset(void *, int Val, size_t Size);
// __vcrt_bool __cdecl _vcrt_uninitialize(__vcrt_bool Terminating);
// __int64 __fastcall _std_exception_copy(_QWORD); weak
// void __stdcall __noreturn CxxThrowException(void *pExceptionObject, _ThrowInfo *pThrowInfo);
// errno_t __cdecl wcscat_s(wchar_t *Destination, rsize_t SizeInWords, const wchar_t *Source);
__int64 sub_1400037C4();
void __fastcall sub_1400037CC(int a1);
void __fastcall sub_1400037F4(__int64 a1);
// __int64 __fastcall unknown_libname_5(void *Block); idb
__int64 __fastcall sub_140003D84(void **a1);
__int64 __fastcall sub_140003DA0(void **a1);
void __fastcall sub_140004170(__int64 a1);
__int64 sub_14000434C();
void *sub_140004380();
void __fastcall sub_140004388(__int64 a1);
int __fastcall sub_1400047B0(_onexit_t Function);
// int __cdecl register_onexit_function(_onexit_table_t *Table, _onexit_t Function);
char sub_1400048CC();
__vcrt_bool sub_140004924();
void __fastcall sub_140004E1C(__int64 a1);
// void __cdecl invalid_parameter_noinfo();
// unsigned int *__cdecl _doserrno();
// int *__cdecl errno();
// __int64 _acrt_update_thread_multibyte_data(void); weak
void __fastcall sub_140006874(int a1);
void __fastcall sub_1400068C8(int a1);
void __fastcall sub_140006AAC(int a1);
void __fastcall sub_140006AD0(int a1);
// __int64 _acrt_update_thread_locale_data(void); weak
char sub_140007DCC();
__int64 __fastcall sub_140008314(__int64 a1, __int64 *a2);
__int64 __fastcall sub_140008348(__int64 a1, __int64 *a2);
void __fastcall sub_140008520(__int64 a1);
void __fastcall sub_14000852C(__int64 a1);
// __int64 __fastcall __crt_seh_guarded_call<int>::operator()<_lambda_bfedae4ebbf01fab1bb6dcc6a9e276e0_,_lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec_ &,_lambda_237c231691f317818eb88cc1d5d642d6_>(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD); weak
__int64 __fastcall sub_14000A9AC(int a1);
HANDLE sub_14000AB50();
int sub_14000AB8C();

//-------------------------------------------------------------------------
// Data declarations

// extern DWORD (__stdcall *GetFileAttributesW)(LPCWSTR lpFileName);
// extern BOOL (__stdcall *CloseHandle)(HANDLE hObject);
// extern DWORD (__stdcall *GetLastError)();
// extern DWORD (__stdcall *WaitForSingleObject)(HANDLE hHandle, DWORD dwMilliseconds);
// extern BOOL (__stdcall *GetExitCodeProcess)(HANDLE hProcess, LPDWORD lpExitCode);
// extern BOOL (__stdcall *CreateProcessW)(LPCWSTR lpApplicationName, LPWSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, BOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCWSTR lpCurrentDirectory, LPSTARTUPINFOW lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation);
// extern DWORD (__stdcall *GetModuleFileNameW)(HMODULE hModule, LPWSTR lpFilename, DWORD nSize);
// extern HGLOBAL (__stdcall *LoadResource)(HMODULE hModule, HRSRC hResInfo);
// extern LPVOID (__stdcall *LockResource)(HGLOBAL hResData);
// extern DWORD (__stdcall *SizeofResource)(HMODULE hModule, HRSRC hResInfo);
// extern HMODULE (__stdcall *LoadLibraryW)(LPCWSTR lpLibFileName);
// extern HRSRC (__stdcall *FindResourceW)(HMODULE hModule, LPCWSTR lpName, LPCWSTR lpType);
// extern void (__stdcall *InitializeSListHead)(PSLIST_HEADER ListHead);
// extern void (__stdcall *EnterCriticalSection)(LPCRITICAL_SECTION lpCriticalSection);
// extern void (__stdcall *LeaveCriticalSection)(LPCRITICAL_SECTION lpCriticalSection);
// extern HANDLE (__stdcall *CreateFileW)(LPCWSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile);
// extern BOOL (__stdcall *ShellExecuteExW)(SHELLEXECUTEINFOW *pExecInfo);
// extern LPWSTR (__stdcall *PathCombineW)(LPWSTR pszDest, LPCWSTR pszDir, LPCWSTR pszFile);
// extern BOOL (__stdcall *PathRemoveFileSpecW)(LPWSTR pszPath);
// extern BOOL (__stdcall *PathCanonicalizeW)(LPWSTR pszBuf, LPCWSTR pszPath);
// extern int (*wsprintfW)(LPWSTR, LPCWSTR, ...);
// extern int (__stdcall *MessageBoxW)(HWND hWnd, LPCWSTR lpText, LPCWSTR lpCaption, UINT uType);
void *std::exception::`vftable' = &unknown_libname_2; // weak
void *std::bad_alloc::`vftable' = &unknown_libname_2; // weak
void *std::bad_array_new_length::`vftable' = &unknown_libname_2; // weak
void *type_info::`vftable' = &sub_140002630; // weak
_QWORD qword_140013BD0[2] = { 0LL, 0LL }; // weak
_QWORD qword_140013BE0 = 0LL; // weak
int dword_1400167A0 = -2; // weak
HANDLE hObject = (HANDLE)0xFFFFFFFFFFFFFFFELL; // idb
_UNKNOWN unk_140016980; // weak
_UNKNOWN unk_140016988; // weak
union _SLIST_HEADER stru_140016F50; // weak
int dword_140016F60; // weak
int dword_140017100; // weak
__int64 qword_140017108; // weak
void *qword_140017330; // idb
void *qword_140017338; // idb
__int64 qword_140017348; // weak
int dword_140017358; // weak
_UNKNOWN unk_14001735C; // weak
__int64 qword_140017360; // weak
_onexit_table_t stru_140017368; // idb
__int64 qword_140017398; // weak
struct __crt_multibyte_data *qword_1400173A0; // idb
_UNKNOWN unk_1400173F0; // weak
__int64 qword_140017630[128]; // weak
int dword_140017A30; // weak
__int64 qword_140017A38; // weak
HANDLE hHeap; // idb
_UNKNOWN unk_140017C50; // weak
_UNKNOWN unk_140017C58; // weak


//----- (0000000140001000) ----------------------------------------------------
__int64 __fastcall sub_140001000(const WCHAR *a1, const WCHAR *a2)
{
  DWORD ExitCode[4]; // [rsp+20h] [rbp-E0h] BYREF
  SHELLEXECUTEINFOW pExecInfo; // [rsp+30h] [rbp-D0h] BYREF
  WCHAR pszDest[264]; // [rsp+A0h] [rbp-60h] BYREF
  wchar_t Destination[1024]; // [rsp+2B0h] [rbp+1B0h] BYREF
  WCHAR Text[1024]; // [rsp+AB0h] [rbp+9B0h] BYREF

  memset(Destination, 0, sizeof(Destination));
  if ( !LoadLibraryW(L"MSVCP140.DLL") && (PathCombineW(pszDest, a2, L"MSVCP140.DLL"), !LoadLibraryW(pszDest))
    || !LoadLibraryW(L"ucrtbase.dll") && (PathCombineW(pszDest, a2, L"ucrtbase.dll"), !LoadLibraryW(pszDest)) )
  {
    wcscat_s(Destination, 0x400u, L"Microsoft Visual C++ 2015 Runtime\n");
  }
  if ( !LoadLibraryW(L"XINPUT1_3.DLL") )
  {
    PathCombineW(pszDest, a2, L"XINPUT1_3.DLL");
    if ( !LoadLibraryW(pszDest) )
      wcscat_s(Destination, 0x400u, L"DirectX Runtime\n");
  }
  if ( !Destination[0] )
    return 0;
  wsprintfW(Text, L"The following component(s) are required to run this program:\n\n%s", Destination);
  PathCombineW(pszDest, a1, L"Engine\\Extras\\Redist\\en-us\\UE4PrereqSetup_x64.exe");
  if ( GetFileAttributesW(pszDest) == -1 )
  {
    MessageBoxW(0, Text, 0, 0);
    return 9001;
  }
  wcscat_s(Text, 0x400u, L"\nWould you like to install them now?");
  if ( MessageBoxW(0, Text, 0, 4u) == 7 )
    return 9002;
  memset(&pExecInfo, 0, sizeof(pExecInfo));
  pExecInfo.cbSize = 112;
  pExecInfo.lpFile = pszDest;
  pExecInfo.fMask = 64;
  pExecInfo.nShow = 1;
  if ( !ShellExecuteExW(&pExecInfo) )
    return 9003;
  ExitCode[0] = 0;
  WaitForSingleObject(pExecInfo.hProcess, 0xFFFFFFFF);
  GetExitCodeProcess(pExecInfo.hProcess, ExitCode);
  CloseHandle(pExecInfo.hProcess);
  if ( ExitCode[0] )
    return 9004;
  else
    return 0;
}

//----- (0000000140001270) ----------------------------------------------------
char *__fastcall sub_140001270(HMODULE hModule, const WCHAR *a2)
{
  HRSRC ResourceW; // rax
  HRSRC v4; // rdi
  HGLOBAL Resource; // rax
  const void *v6; // rsi
  __int64 v7; // rbx
  size_t v8; // rax
  size_t v9; // rbx
  char *v10; // rdi
  char *result; // rax

  ResourceW = FindResourceW(hModule, a2, (LPCWSTR)0xA);
  v4 = ResourceW;
  if ( !ResourceW )
    return 0;
  Resource = LoadResource(hModule, ResourceW);
  if ( !Resource )
    return 0;
  v6 = LockResource(Resource);
  v7 = SizeofResource(hModule, v4) >> 1;
  v8 = 2LL * (unsigned int)(v7 + 1);
  if ( !is_mul_ok((unsigned int)(v7 + 1), 2u) )
    v8 = -1;
  v9 = 2 * v7;
  v10 = (char *)operator new(v8);
  memmove(v10, v6, v9);
  result = v10;
  *(_WORD *)&v10[v9] = 0;
  return result;
}

//----- (0000000140001330) ----------------------------------------------------
__int64 __fastcall sub_140001330(LPWSTR lpCommandLine)
{
  DWORD LastError; // esi
  __int64 v3; // rcx
  WCHAR *v4; // rbx
  struct _PROCESS_INFORMATION ProcessInformation; // [rsp+50h] [rbp-98h] BYREF
  struct _STARTUPINFOW StartupInfo; // [rsp+70h] [rbp-78h] BYREF
  DWORD ExitCode; // [rsp+F8h] [rbp+10h] BYREF

  memset(&StartupInfo, 0, sizeof(StartupInfo));
  StartupInfo.cb = 104;
  memset(&ProcessInformation, 0, sizeof(ProcessInformation));
  if ( CreateProcessW(0, lpCommandLine, 0, 0, 0, 0, 0, 0, &StartupInfo, &ProcessInformation) )
  {
    WaitForSingleObject(ProcessInformation.hProcess, 0xFFFFFFFF);
    ExitCode = 9006;
    GetExitCodeProcess(ProcessInformation.hProcess, &ExitCode);
    CloseHandle(ProcessInformation.hThread);
    CloseHandle(ProcessInformation.hProcess);
    return ExitCode;
  }
  else
  {
    LastError = GetLastError();
    v3 = -1;
    do
      ++v3;
    while ( lpCommandLine[v3] );
    v4 = (WCHAR *)operator new(saturated_mul(v3 + 50, 2u));
    wsprintfW(v4, L"Couldn't start:\n%s\nCreateProcess() returned %x.", lpCommandLine, LastError);
    MessageBoxW(0, v4, 0, 0);
    j_j_free(v4);
    return 9005;
  }
}

//----- (0000000140001490) ----------------------------------------------------
int __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd)
{
  char *v6; // rdi
  __int64 v8; // rax
  __int64 v9; // rcx
  WCHAR *v10; // rbx
  char *v11; // rsi
  __int64 v12; // rcx
  __int64 v13; // rax
  __int64 v14; // rcx
  __int64 v15; // rax
  __int64 v16; // rcx
  __int64 v17; // rdx
  WCHAR *v18; // rbx
  int v19; // edi
  WCHAR *v20; // rcx
  WCHAR pszBuf[264]; // [rsp+30h] [rbp-658h] BYREF
  WCHAR pszPath[264]; // [rsp+240h] [rbp-448h] BYREF
  WCHAR Filename[264]; // [rsp+450h] [rbp-238h] BYREF

  GetModuleFileNameW(hInstance, Filename, 0x208u);
  PathCanonicalizeW(pszBuf, Filename);
  PathRemoveFileSpecW(pszBuf);
  v6 = sub_140001270(hInstance, (const WCHAR *)0xC9);
  if ( v6 )
  {
    v8 = -1;
    do
      ++v8;
    while ( *(_WORD *)&v6[2 * v8] );
    v9 = -1;
    do
      ++v9;
    while ( pszBuf[v9] );
    v10 = (WCHAR *)operator new(saturated_mul(v8 + 20 + v9, 2u));
    wsprintfW(v10, L"%s\\%s", pszBuf, v6);
    PathCanonicalizeW(pszPath, v10);
    j_j_free(v10);
    PathRemoveFileSpecW(pszPath);
    v11 = sub_140001270(hInstance, (const WCHAR *)0xCA);
    v12 = -1;
    do
      ++v12;
    while ( *(_WORD *)&lpCmdLine[2 * v12] );
    v13 = -1;
    do
      ++v13;
    while ( *(_WORD *)&v11[2 * v13] );
    v14 = v13 + v12;
    v15 = -1;
    do
      ++v15;
    while ( *(_WORD *)&v6[2 * v15] );
    v16 = v15 + v14;
    v17 = -1;
    do
      ++v17;
    while ( pszBuf[v17] );
    v18 = (WCHAR *)operator new(saturated_mul(v17 + 20 + v16, 2u));
    wsprintfW(v18, L"\"%s\\%s\" %s %s", pszBuf, v6, v11, lpCmdLine);
    j_j_free(v11);
    j_j_free(v6);
    v19 = sub_140001000(pszBuf, pszPath);
    v20 = v18;
    if ( v19 || (v19 = sub_140001330(v18), v20 = v18, v19) )
    {
      j_j_free(v20);
      return v19;
    }
    else
    {
      j_j_free(v18);
      return 0;
    }
  }
  else
  {
    MessageBoxW(0, L"This program is used for packaged games and is not meant to be run directly.", 0, 0);
    return 9000;
  }
}

//----- (00000001400016B4) ----------------------------------------------------
__int64 sub_1400016B4()
{
  _QWORD *v0; // rax
  _QWORD *v1; // rax

  v0 = sub_1400016D4();
  *v0 |= 4uLL;
  v1 = sub_1400016DC();
  *v1 |= 2uLL;
  return 0;
}

//----- (00000001400016D4) ----------------------------------------------------
void *sub_1400016D4()
{
  return &unk_140016980;
}

//----- (00000001400016DC) ----------------------------------------------------
void *sub_1400016DC()
{
  return &unk_140016988;
}

//----- (0000000140001F90) ----------------------------------------------------
__int64 __fastcall UserMathErrorFunction(struct _exception *a1)
{
  return 0;
}

//----- (0000000140001FA4) ----------------------------------------------------
void sub_140001FA4()
{
  InitializeSListHead(&stru_140016F50);
}
// 140016F50: using guessed type union _SLIST_HEADER stru_140016F50;

//----- (0000000140001FE0) ----------------------------------------------------
void *sub_140001FE0()
{
  return &unk_140017C58;
}

//----- (0000000140001FE8) ----------------------------------------------------
void *sub_140001FE8()
{
  return &unk_140017C50;
}

//----- (0000000140001FF0) ----------------------------------------------------
void sub_140001FF0()
{
  dword_140016F60 = 0;
}
// 140016F60: using guessed type int dword_140016F60;

//----- (0000000140002218) ----------------------------------------------------
__int64 sub_140002218()
{
  _QWORD *i; // rbx
  __int64 result; // rax

  for ( i = qword_140013BD0; i < qword_140013BD0; ++i )
  {
    if ( *i )
      result = ((__int64 (__fastcall *)(_QWORD))*i)(*i);
  }
  return result;
}
// 1400022B0: using guessed type __int64 __fastcall j__guard_check_icall_nop();
// 140013BD0: using guessed type _QWORD qword_140013BD0[2];

//----- (0000000140002264) ----------------------------------------------------
void __fastcall sub_140002264()
{
  _QWORD *i; // rbx

  for ( i = &qword_140013BE0; i < &qword_140013BE0; ++i )
  {
    if ( *i )
      ((void (__fastcall *)(_QWORD))*i)(*i);
  }
}
// 1400022B0: using guessed type __int64 __fastcall j__guard_check_icall_nop();
// 140013BE0: using guessed type _QWORD qword_140013BE0;

//----- (00000001400022B8) ----------------------------------------------------
_QWORD *__fastcall sub_1400022B8(_QWORD *a1, __int64 a2)
{
  *a1 = &std::exception::`vftable';
  a1[1] = 0;
  a1[2] = 0;
  _std_exception_copy(a2 + 8);
  *a1 = &std::bad_alloc::`vftable';
  return a1;
}
// 140002EB0: using guessed type __int64 __fastcall _std_exception_copy(_QWORD);
// 14000C6B8: using guessed type void *std::exception::`vftable';
// 14000C6E8: using guessed type void *std::bad_alloc::`vftable';

//----- (00000001400022F8) ----------------------------------------------------
_QWORD *__fastcall sub_1400022F8(_QWORD *a1)
{
  a1[2] = 0;
  a1[1] = "bad allocation";
  *a1 = &std::bad_alloc::`vftable';
  return a1;
}
// 14000C6E8: using guessed type void *std::bad_alloc::`vftable';

//----- (0000000140002318) ----------------------------------------------------
_QWORD *__fastcall sub_140002318(_QWORD *a1, __int64 a2)
{
  *a1 = &std::exception::`vftable';
  a1[1] = 0;
  a1[2] = 0;
  _std_exception_copy(a2 + 8);
  *a1 = &std::bad_array_new_length::`vftable';
  return a1;
}
// 140002EB0: using guessed type __int64 __fastcall _std_exception_copy(_QWORD);
// 14000C6B8: using guessed type void *std::exception::`vftable';
// 14000C710: using guessed type void *std::bad_array_new_length::`vftable';

//----- (0000000140002358) ----------------------------------------------------
_QWORD *__fastcall sub_140002358(_QWORD *a1)
{
  a1[2] = 0;
  a1[1] = "bad array new length";
  *a1 = &std::bad_array_new_length::`vftable';
  return a1;
}
// 14000C710: using guessed type void *std::bad_array_new_length::`vftable';

//----- (0000000140002408) ----------------------------------------------------
void __noreturn sub_140002408()
{
  _QWORD pExceptionObject[5]; // [rsp+20h] [rbp-28h] BYREF

  sub_1400022F8(pExceptionObject);
  throw (std::bad_alloc *)pExceptionObject;
}

//----- (0000000140002428) ----------------------------------------------------
void __noreturn sub_140002428()
{
  _QWORD pExceptionObject[5]; // [rsp+20h] [rbp-28h] BYREF

  sub_140002358(pExceptionObject);
  throw (std::bad_array_new_length *)pExceptionObject;
}

//----- (0000000140002630) ----------------------------------------------------
_QWORD *__fastcall sub_140002630(_QWORD *a1, char a2)
{
  *a1 = &type_info::`vftable';
  if ( (a2 & 1) != 0 )
    j_j_free(a1);
  return a1;
}
// 14000C740: using guessed type void *type_info::`vftable';

//----- (00000001400037C4) ----------------------------------------------------
__int64 sub_1400037C4()
{
  return (unsigned int)dword_140017100;
}
// 140017100: using guessed type int dword_140017100;

//----- (00000001400037CC) ----------------------------------------------------
void __fastcall sub_1400037CC(int a1)
{
  dword_140017100 = a1;
}
// 140017100: using guessed type int dword_140017100;

//----- (00000001400037F4) ----------------------------------------------------
void __fastcall sub_1400037F4(__int64 a1)
{
  qword_140017108 = a1;
}
// 140017108: using guessed type __int64 qword_140017108;

//----- (0000000140003D84) ----------------------------------------------------
__int64 __fastcall sub_140003D84(void **a1)
{
  void *v1; // rcx
  __int64 result; // rax

  v1 = *a1;
  if ( v1 != qword_140017338 )
    return unknown_libname_5(v1);
  return result;
}

//----- (0000000140003DA0) ----------------------------------------------------
__int64 __fastcall sub_140003DA0(void **a1)
{
  void *v1; // rcx
  __int64 result; // rax

  v1 = *a1;
  if ( v1 != qword_140017330 )
    return unknown_libname_5(v1);
  return result;
}

//----- (0000000140004170) ----------------------------------------------------
void __fastcall sub_140004170(__int64 a1)
{
  qword_140017348 = a1;
}
// 140017348: using guessed type __int64 qword_140017348;

//----- (000000014000434C) ----------------------------------------------------
__int64 sub_14000434C()
{
  return (unsigned int)dword_140017358;
}
// 140017358: using guessed type int dword_140017358;

//----- (0000000140004380) ----------------------------------------------------
void *sub_140004380()
{
  return &unk_14001735C;
}

//----- (0000000140004388) ----------------------------------------------------
void __fastcall sub_140004388(__int64 a1)
{
  qword_140017360 = a1;
}
// 140017360: using guessed type __int64 qword_140017360;

//----- (00000001400047B0) ----------------------------------------------------
int __fastcall sub_1400047B0(_onexit_t Function)
{
  return register_onexit_function(&stru_140017368, Function);
}

//----- (00000001400048CC) ----------------------------------------------------
char sub_1400048CC()
{
  return 1;
}

//----- (0000000140004924) ----------------------------------------------------
__vcrt_bool sub_140004924()
{
  return _vcrt_uninitialize(0);
}

//----- (0000000140004E1C) ----------------------------------------------------
void __fastcall sub_140004E1C(__int64 a1)
{
  qword_140017398 = a1;
}
// 140017398: using guessed type __int64 qword_140017398;

//----- (0000000140006874) ----------------------------------------------------
void __fastcall sub_140006874(int a1)
{
  EnterCriticalSection((LPCRITICAL_SECTION)&unk_1400173F0 + a1);
}

//----- (00000001400068C8) ----------------------------------------------------
void __fastcall sub_1400068C8(int a1)
{
  LeaveCriticalSection((LPCRITICAL_SECTION)&unk_1400173F0 + a1);
}

//----- (0000000140006AAC) ----------------------------------------------------
void __fastcall sub_140006AAC(int a1)
{
  EnterCriticalSection((LPCRITICAL_SECTION)(qword_140017630[(__int64)a1 >> 6] + ((unsigned __int64)(a1 & 0x3F) << 6)));
}
// 140017630: using guessed type __int64 qword_140017630[128];

//----- (0000000140006AD0) ----------------------------------------------------
void __fastcall sub_140006AD0(int a1)
{
  LeaveCriticalSection((LPCRITICAL_SECTION)(qword_140017630[(__int64)a1 >> 6] + ((unsigned __int64)(a1 & 0x3F) << 6)));
}
// 140017630: using guessed type __int64 qword_140017630[128];

//----- (0000000140007DCC) ----------------------------------------------------
char sub_140007DCC()
{
  hHeap = 0;
  return 1;
}

//----- (0000000140008314) ----------------------------------------------------
__int64 __fastcall sub_140008314(__int64 a1, __int64 *a2)
{
  __int64 result; // rax

  result = qword_140017A38;
  if ( *a2 != qword_140017A38 )
  {
    result = *(unsigned int *)(a1 + 936);
    if ( ((unsigned int)result & dword_1400167A0) == 0 )
    {
      result = _acrt_update_thread_locale_data();
      *a2 = result;
    }
  }
  return result;
}
// 1400076E0: using guessed type __int64 _acrt_update_thread_locale_data(void);
// 1400167A0: using guessed type int dword_1400167A0;
// 140017A38: using guessed type __int64 qword_140017A38;

//----- (0000000140008348) ----------------------------------------------------
__int64 __fastcall sub_140008348(__int64 a1, __int64 *a2)
{
  __int64 result; // rax

  result = (__int64)qword_1400173A0;
  if ( (struct __crt_multibyte_data *)*a2 != qword_1400173A0 )
  {
    result = *(unsigned int *)(a1 + 936);
    if ( ((unsigned int)result & dword_1400167A0) == 0 )
    {
      result = _acrt_update_thread_multibyte_data();
      *a2 = result;
    }
  }
  return result;
}
// 1400064A8: using guessed type __int64 _acrt_update_thread_multibyte_data(void);
// 1400167A0: using guessed type int dword_1400167A0;

//----- (0000000140008520) ----------------------------------------------------
void __fastcall sub_140008520(__int64 a1)
{
  EnterCriticalSection((LPCRITICAL_SECTION)(a1 + 48));
}

//----- (000000014000852C) ----------------------------------------------------
void __fastcall sub_14000852C(__int64 a1)
{
  LeaveCriticalSection((LPCRITICAL_SECTION)(a1 + 48));
}

//----- (000000014000A9AC) ----------------------------------------------------
__int64 __fastcall sub_14000A9AC(int a1)
{
  int *v2; // [rsp+20h] [rbp-18h] BYREF
  int v3; // [rsp+40h] [rbp+8h] BYREF
  char v4; // [rsp+48h] [rbp+10h] BYREF
  int v5; // [rsp+50h] [rbp+18h] BYREF
  int v6; // [rsp+58h] [rbp+20h] BYREF

  v3 = a1;
  if ( a1 == -2 )
  {
    *_doserrno() = 0;
    *errno() = 9;
  }
  else
  {
    if ( a1 >= 0
      && a1 < (unsigned int)dword_140017A30
      && (*(_BYTE *)(qword_140017630[(__int64)a1 >> 6] + ((unsigned __int64)(a1 & 0x3F) << 6) + 56) & 1) != 0 )
    {
      v5 = a1;
      v6 = a1;
      v2 = &v3;
      return ((__int64 (__fastcall *)(char *, int *, int **, int *))__crt_seh_guarded_call<int>::operator()<_lambda_bfedae4ebbf01fab1bb6dcc6a9e276e0_,_lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec_ &,_lambda_237c231691f317818eb88cc1d5d642d6_>)(
               &v4,
               &v6,
               &v2,
               &v5);
    }
    *_doserrno() = 0;
    *errno() = 9;
    invalid_parameter_noinfo();
  }
  return 0xFFFFFFFFLL;
}
// 14000A938: using guessed type __int64 __fastcall __crt_seh_guarded_call<int>::operator()<_lambda_bfedae4ebbf01fab1bb6dcc6a9e276e0_,_lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec_ &,_lambda_237c231691f317818eb88cc1d5d642d6_>(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
// 140017630: using guessed type __int64 qword_140017630[128];
// 140017A30: using guessed type int dword_140017A30;

//----- (000000014000AB50) ----------------------------------------------------
HANDLE sub_14000AB50()
{
  HANDLE result; // rax

  result = CreateFileW(L"CONOUT$", 0x40000000u, 3u, 0, 3u, 0, 0);
  hObject = result;
  return result;
}

//----- (000000014000AB8C) ----------------------------------------------------
int sub_14000AB8C()
{
  int result; // eax

  result = (_DWORD)hObject + 2;
  if ( (unsigned __int64)hObject + 2 > 1 )
    return CloseHandle(hObject);
  return result;
}

// nfuncs=323 queued=46 decompiled=46 lumina nreq=0 worse=0 better=0
// ALL OK, 46 function(s) have been successfully decompiled
